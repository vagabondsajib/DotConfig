#!/bin/bash
# dependencies: ffmpeg fzf gnu-grep

# available flags

#Defaults
promptcmd="fzf"
query=""

# if no query is set with flags then ask for one
if [ -z "$query" ]; then
            echo -n "Search: "
            read -r query
fi 

# program cancelled -> exit
if [ -z "$query" ]; then exit; fi 

# clean query / channel
query=$(sed \
  -e 's|+|%2B|g'\
  -e 's|#|%23|g'\
  -e 's|&|%26|g'\
  -e 's| |+|g' <<< "$query")

response="$(curl -s "https://www.youtube.com/results?search_query=$query" |\
sed 's|\\.||g')"

# if unable to fetch the youtube results page, inform and exit
if ! grep -q "script" <<< "$response"; then echo "unable to fetch yt"; exit 1; fi

# regex expression to match video and playlist entries from yt result page
vgrep='"videoRenderer":{"videoId":"\K.{11}".+?"text":".+?[^\\](?=")'
pgrep='"playlistRenderer":{"playlistId":"\K.{34}?","title":{"simpleText":".+?[^\"](?=")'

# grep the id and title
# return them in format id (type) title
getresults() {
    grep -oP "$1" <<< "$response" |\
      awk -F\" -v p="$2" '{ print $1 "\t" p " " $NF}'
}

# get the list of videos/playlists and their ids in videoids and playlistids
videoids=$(getresults "$vgrep")
playlistids=$(getresults "$pgrep" "(playlist)")

# if there are playlists or videos, append them to list
[ -n "$playlistids" ] && ids="$playlistids\n"
[ -n "$videoids" ] && ids="$ids$videoids"

# url prefix for videos and playlists
mainurl="https://vid.puffyan.us/latest_version?id="
appendedurl="&itag=22"

# prompt the results to user infinitely until they exit (escape)
while true; do
    choice=$(echo -e "$ids" | cut -d'	' -f2 | $promptcmd) # dont show id
    if [ -z "$choice" ]; then exit; fi	# if esc-ed then exit
    id=$(echo -e "$ids" | grep -Fwm1 "$choice" | cut -d'	' -f1) # get id of choice
    echo -e "$choice\t($id)"
    case $id in
        # 11 digit id = video
        ???????????) ffplay "$mainurl$id$appendedurl";;
        # 34 digit id = playlist
        ??????????????????????????????????) ffplay "$mainurl$id$appendurl";;
        *) exit ;;
    esac
done

